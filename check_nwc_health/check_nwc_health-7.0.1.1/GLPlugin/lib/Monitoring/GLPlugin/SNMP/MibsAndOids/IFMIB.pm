package Monitoring::GLPlugin::SNMP::MibsAndOids::IFMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'IFMIB'} = {
  url => '',
  name => 'IFMIB',
};

#$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'IFMIB'} = 

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'IFMIB'} = {
  interfaces => '1.3.6.1.2.1.2',
  ifNumber => '1.3.6.1.2.1.2.1',
  ifTable => '1.3.6.1.2.1.2.2',
  ifEntry => '1.3.6.1.2.1.2.2.1',
  ifIndex => '1.3.6.1.2.1.2.2.1.1',
  ifDescr => '1.3.6.1.2.1.2.2.1.2',
  ifType => '1.3.6.1.2.1.2.2.1.3',
  ifTypeDefinition => 'IANAIFTYPE-MIB::IANAifType',
  ifMtu => '1.3.6.1.2.1.2.2.1.4',
  ifSpeed => '1.3.6.1.2.1.2.2.1.5',
  ifPhysAddress => '1.3.6.1.2.1.2.2.1.6',
  ifAdminStatus => '1.3.6.1.2.1.2.2.1.7',
  ifAdminStatusDefinition => 'IFMIB::ifAdminStatus',
  ifOperStatus => '1.3.6.1.2.1.2.2.1.8',
  ifOperStatusDefinition => 'IFMIB::ifOperStatus',
  ifLastChange => '1.3.6.1.2.1.2.2.1.9',
  ifInOctets => '1.3.6.1.2.1.2.2.1.10',
  ifInUcastPkts => '1.3.6.1.2.1.2.2.1.11',
  ifInNUcastPkts => '1.3.6.1.2.1.2.2.1.12',
  ifInDiscards => '1.3.6.1.2.1.2.2.1.13',
  ifInErrors => '1.3.6.1.2.1.2.2.1.14',
  ifInUnknownProtos => '1.3.6.1.2.1.2.2.1.15',
  ifOutOctets => '1.3.6.1.2.1.2.2.1.16',
  ifOutUcastPkts => '1.3.6.1.2.1.2.2.1.17',
  ifOutNUcastPkts => '1.3.6.1.2.1.2.2.1.18',
  ifOutDiscards => '1.3.6.1.2.1.2.2.1.19',
  ifOutErrors => '1.3.6.1.2.1.2.2.1.20',
  ifOutQLen => '1.3.6.1.2.1.2.2.1.21',
  ifSpecific => '1.3.6.1.2.1.2.2.1.22',
  ifMIB => '1.3.6.1.2.1.31',
  ifMIBObjects => '1.3.6.1.2.1.31.1',
  ifXTable => '1.3.6.1.2.1.31.1.1',
  ifXEntry => '1.3.6.1.2.1.31.1.1.1',
  ifName => '1.3.6.1.2.1.31.1.1.1.1',
  ifInMulticastPkts => '1.3.6.1.2.1.31.1.1.1.2',
  ifInBroadcastPkts => '1.3.6.1.2.1.31.1.1.1.3',
  ifOutMulticastPkts => '1.3.6.1.2.1.31.1.1.1.4',
  ifOutBroadcastPkts => '1.3.6.1.2.1.31.1.1.1.5',
  ifHCInOctets => '1.3.6.1.2.1.31.1.1.1.6',
  ifHCInUcastPkts => '1.3.6.1.2.1.31.1.1.1.7',
  ifHCInMulticastPkts => '1.3.6.1.2.1.31.1.1.1.8',
  ifHCInBroadcastPkts => '1.3.6.1.2.1.31.1.1.1.9',
  ifHCOutOctets => '1.3.6.1.2.1.31.1.1.1.10',
  ifHCOutUcastPkts => '1.3.6.1.2.1.31.1.1.1.11',
  ifHCOutMulticastPkts => '1.3.6.1.2.1.31.1.1.1.12',
  ifHCOutBroadcastPkts => '1.3.6.1.2.1.31.1.1.1.13',
  ifLinkUpDownTrapEnable => '1.3.6.1.2.1.31.1.1.1.14',
  ifLinkUpDownTrapEnableDefinition => 'IFMIB::ifLinkUpDownTrapEnable',
  ifHighSpeed => '1.3.6.1.2.1.31.1.1.1.15',
  ifPromiscuousMode => '1.3.6.1.2.1.31.1.1.1.16',
  ifConnectorPresent => '1.3.6.1.2.1.31.1.1.1.17',
  ifAlias => '1.3.6.1.2.1.31.1.1.1.18',
  ifCounterDiscontinuityTime => '1.3.6.1.2.1.31.1.1.1.19',
  ifStackTable => '1.3.6.1.2.1.31.1.2',
  ifStackEntry => '1.3.6.1.2.1.31.1.2.1',
  ifStackHigherLayer => '1.3.6.1.2.1.31.1.2.1.1',
  ifStackLowerLayer => '1.3.6.1.2.1.31.1.2.1.2',
  ifStackStatus => '1.3.6.1.2.1.31.1.2.1.3',
  ifStackStatusDefinition => 'SNMPv2-TC-v1-MIB::RowStatus',
  ifTestTable => '1.3.6.1.2.1.31.1.3',
  ifTestEntry => '1.3.6.1.2.1.31.1.3.1',
  ifTestId => '1.3.6.1.2.1.31.1.3.1.1',
  ifTestStatus => '1.3.6.1.2.1.31.1.3.1.2',
  ifTestStatusDefinition => 'IFMIB::ifTestStatus',
  ifTestType => '1.3.6.1.2.1.31.1.3.1.3',
  ifTestResult => '1.3.6.1.2.1.31.1.3.1.4',
  ifTestResultDefinition => 'IFMIB::ifTestResult',
  ifTestCode => '1.3.6.1.2.1.31.1.3.1.5',
  ifTestOwner => '1.3.6.1.2.1.31.1.3.1.6',
  ifRcvAddressTable => '1.3.6.1.2.1.31.1.4',
  ifRcvAddressEntry => '1.3.6.1.2.1.31.1.4.1',
  ifRcvAddressAddress => '1.3.6.1.2.1.31.1.4.1.1',
  ifRcvAddressStatus => '1.3.6.1.2.1.31.1.4.1.2',
  ifRcvAddressType => '1.3.6.1.2.1.31.1.4.1.3',
  ifRcvAddressTypeDefinition => 'IFMIB::ifRcvAddressType',
  ifTableLastChange => '1.3.6.1.2.1.31.1.5',
  ifStackLastChange => '1.3.6.1.2.1.31.1.6',
  ifConformance => '1.3.6.1.2.1.31.2',
  ifGroups => '1.3.6.1.2.1.31.2.1',
  ifCompliances => '1.3.6.1.2.1.31.2.2',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'IFMIB'} = {
  ifAdminStatus => {
    '1' => 'up',
    '2' => 'down',
    '3' => 'testing',
  },
  ifLinkUpDownTrapEnable => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  ifTestStatus => {
    '1' => 'notInUse',
    '2' => 'inUse',
  },
  ifOperStatus => {
    '1' => 'up',
    '2' => 'down',
    '3' => 'testing',
    '4' => 'unknown',
    '5' => 'dormant',
    '6' => 'notPresent',
    '7' => 'lowerLayerDown',
  },
  ifRcvAddressType => {
    '1' => 'other',
    '2' => 'volatile',
    '3' => 'nonVolatile',
  },
  ifTestResult => {
    '1' => 'none',
    '2' => 'success',
    '3' => 'inProgress',
    '4' => 'notSupported',
    '5' => 'unAbleToRun',
    '6' => 'aborted',
    '7' => 'failed',
  },
};
